/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Channels } from "../resources/channels/client/Client";
import { Messages } from "../resources/messages/client/Client";
import { Users } from "../resources/users/client/Client";

export declare namespace Chat {
    interface Options {
        environment?: core.Supplier<environments.VellumEnvironment | string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Chat {
    constructor(protected readonly _options: Chat.Options = {}) {}

    protected _channels: Channels | undefined;

    public get channels(): Channels {
        return (this._channels ??= new Channels(this._options));
    }

    protected _messages: Messages | undefined;

    public get messages(): Messages {
        return (this._messages ??= new Messages(this._options));
    }

    protected _users: Users | undefined;

    public get users(): Users {
        return (this._users ??= new Users(this._options));
    }
}
