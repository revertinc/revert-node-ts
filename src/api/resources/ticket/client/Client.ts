/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Collection } from "../resources/collection/client/Client";
import { Comment } from "../resources/comment/client/Client";
import { Proxy } from "../resources/proxy/client/Client";
import { Task } from "../resources/task/client/Client";
import { User } from "../resources/user/client/Client";

export declare namespace Ticket {
    interface Options {
        environment?: core.Supplier<environments.RevertRevertApiEnvironment | string>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Ticket {
    constructor(protected readonly _options: Ticket.Options = {}) {}

    protected _collection: Collection | undefined;

    public get collection(): Collection {
        return (this._collection ??= new Collection(this._options));
    }

    protected _comment: Comment | undefined;

    public get comment(): Comment {
        return (this._comment ??= new Comment(this._options));
    }

    protected _proxy: Proxy | undefined;

    public get proxy(): Proxy {
        return (this._proxy ??= new Proxy(this._options));
    }

    protected _task: Task | undefined;

    public get task(): Task {
        return (this._task ??= new Task(this._options));
    }

    protected _user: User | undefined;

    public get user(): User {
        return (this._user ??= new User(this._options));
    }
}
