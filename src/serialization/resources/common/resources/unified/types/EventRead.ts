/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Revert from "../../../../../../api";
import * as core from "../../../../../../core";

export const EventRead: core.serialization.ObjectSchema<serializers.common.EventRead.Raw, Revert.common.EventRead> =
    core.serialization.object({
        type: core.serialization.string(),
        subject: core.serialization.string(),
        startDateTime: core.serialization.string(),
        endDateTime: core.serialization.string(),
        isAllDayEvent: core.serialization.boolean(),
        description: core.serialization.string(),
        location: core.serialization.string(),
    });

export declare namespace EventRead {
    interface Raw {
        type: string;
        subject: string;
        startDateTime: string;
        endDateTime: string;
        isAllDayEvent: boolean;
        description: string;
        location: string;
    }
}
