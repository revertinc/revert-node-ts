/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Vellum from "../../../../../../api";
import * as core from "../../../../../../core";

export const TaskWrite: core.serialization.ObjectSchema<serializers.common.TaskWrite.Raw, Vellum.common.TaskWrite> =
    core.serialization.object({
        subject: core.serialization.string(),
        body: core.serialization.string(),
        priority: core.serialization.string(),
        status: core.serialization.string(),
        dueDate: core.serialization.unknown(),
        associations: core.serialization
            .lazyObject(async () => (await import("../../../../..")).common.TaskAssociation)
            .optional(),
    });

export declare namespace TaskWrite {
    interface Raw {
        subject: string;
        body: string;
        priority: string;
        status: string;
        dueDate?: unknown;
        associations?: serializers.common.TaskAssociation.Raw | null;
    }
}
