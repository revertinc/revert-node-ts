/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as RevertRevertApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const DealWrite: core.serialization.ObjectSchema<
    serializers.common.DealWrite.Raw,
    RevertRevertApi.common.DealWrite
> = core.serialization.object({
    amount: core.serialization.number(),
    priority: core.serialization.string().optional(),
    stage: core.serialization.string(),
    name: core.serialization.string(),
    expectedCloseDate: core.serialization.unknown(),
    isWon: core.serialization.boolean(),
    probability: core.serialization.number(),
    associations: core.serialization
        .lazyObject(async () => (await import("../../../../..")).common.DealAssociation)
        .optional(),
});

export declare namespace DealWrite {
    interface Raw {
        amount: number;
        priority?: string | null;
        stage: string;
        name: string;
        expectedCloseDate?: unknown;
        isWon: boolean;
        probability: number;
        associations?: serializers.common.DealAssociation.Raw | null;
    }
}
