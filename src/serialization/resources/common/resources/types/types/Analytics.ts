/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as RevertRevertApi from "../../../../../../api";
import * as core from "../../../../../../core";

export const Analytics: core.serialization.ObjectSchema<
    serializers.common.Analytics.Raw,
    RevertRevertApi.common.Analytics
> = core.serialization.object({
    totalConnections: core.serialization.number(),
    connectedApps: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).common.ConnectedApps))
        .optional(),
    recentConnections: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).common.RecentConnections))
        .optional(),
    recentApiCalls: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../../..")).common.RecentApiCalls))
        .optional(),
});

export declare namespace Analytics {
    interface Raw {
        totalConnections: number;
        connectedApps?: serializers.common.ConnectedApps.Raw[] | null;
        recentConnections?: serializers.common.RecentConnections.Raw[] | null;
        recentApiCalls?: serializers.common.RecentApiCalls.Raw[] | null;
    }
}
