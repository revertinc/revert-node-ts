/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import * as Revert from "../../../../../../api";
import * as core from "../../../../../../core";

export const Account: core.serialization.ObjectSchema<serializers.common.Account.Raw, Revert.common.Account> =
    core.serialization.object({
        id: core.serialization.string(),
        tenantCount: core.serialization.property("tenant_count", core.serialization.number()),
        privateToken: core.serialization.property("private_token", core.serialization.string()),
        publicToken: core.serialization.property("public_token", core.serialization.string()),
        domain: core.serialization.string(),
        skipWaitlist: core.serialization.boolean(),
        users: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../../../..")).common.RevertUser))
            .optional(),
        apps: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../../../..")).common.App))
            .optional(),
    });

export declare namespace Account {
    interface Raw {
        id: string;
        tenant_count: number;
        private_token: string;
        public_token: string;
        domain: string;
        skipWaitlist: boolean;
        users?: serializers.common.RevertUser.Raw[] | null;
        apps?: serializers.common.App.Raw[] | null;
    }
}
